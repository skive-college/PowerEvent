@page
@model PowerEvent.AdminSlutResultatModel
@{
    ViewData["Title"] = "AdminSlutResultat";
}
@{
    if (@Model.CurrentLogin != null && Model.CurrentLogin.Id != 0)
    {
    <div class="container">
        <div class="row">
            <div class="col, text-center" style="width:100%;">
                <div style="border: 2px solid black; border-radius:15px;">
                    <h1>Resultat</h1>
                </div>
            </div>
        </div>

        <div class="row">
            <style>
                #EventList {
                    width: 120px;
                }

                    #EventList:focus {
                        min-width: 120px;
                        width: auto;
                    }
            </style>
            <!-- {asp-for="Model.SelectedEvent"} laver SelectedEvent int om til "value" property på det valgte element -->
            <select id="EventList" data-val="true" asp-for="@Model.SelectedEvent" onchange="elementChanged('EventList')">
                @{
                    if (@Model.SelectedEvent == -1)
                    {
                        <option value="-1" style="width:300px;">Vælg et event</option>
                    }

                    foreach (var item in @Model.EventList)
                    {
                        <option value="@item.Id">@item.Navn</option>
                    }
                }
            </select>
        </div>
        <div class="row">
            @{
                //laver dynamisk et "table" til hvert hold der indeholde holdets deltagere
                <div class="col-6 col-md-3 col-lg-2">
                    <br />
                    <div>
                        <table style=" height: auto; width: 100%;">
                            @{
                                if (Model.SelectedEvent != -1)
                                {
                                    <tr>
                                        <td class="col" style="border: solid black; border-width: 1px 1px 1px 1px; text-align:center; font-weight: bold; font-size: 1.4em;">Hold</td>
                                    </tr>
                                }
                            }

                            @{
                                //opretter deltagerne af hver hold
                                foreach (var _hold in @Model.HoldList)
                                {
                                    if (_hold.Id == _hold.Id)
                                    {
                                        <tr>
                                            <td class="col" style="border: solid black; border-width: 1px 1px 1px 1px; text-align:center; font-size: 1.4em; background-color: @_hold.Farve; text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000; color: white">@_hold.Navn</td>
                                        </tr>
                                    }
                                }
                            }
                        </table>
                    </div>
                </div>

                //laver dynamisk et "table" til hvert Aktivitet


                for (int _vis = 0; _vis < Model.Vis; _vis++)
                {
                    <div class="col-6 col-md-3 col-lg-2">
                        <br />
                        <table style=" height: auto; width: 100%;">
                            <tr>
                                <th class="col" style="border: solid black; border-width: 1px 1px 1px 1px; text-align:center; font-size: 1.4em;">@Model.AktivitetList.Where(i => i.Id == Model.EventAktivitetList[_vis].AktivitetId).FirstOrDefault().Navn</th>
                            </tr>

                            @*opretter score af hvert hold*@
                            @{
                                foreach (var _hold in @Model.HoldList)
                                {
                                    int totalScore = 0;
                                    int antalScores = 0;
                                    foreach (var _eventAktivitetHold in _hold.HoldAktiviteter.Where(i => i.EventAktivitetId == Model.EventAktivitetList[_vis].Id).ToList())
                                    {
                                        foreach (var _score in _eventAktivitetHold.HoldScores)
                                        {
                                            totalScore += _score.HoldScore;
                                            antalScores++;
                                        }

                                        //kode for at få gennemsnittet ↓↓

                                        if (antalScores != 0)
                                        {
                                            totalScore = totalScore / antalScores;
                                        }
                                    }
                                    <tr>
                                        <td class="col" style="border: solid black; border-width: 0px 1px 1px 1px; text-align:center; font-size: 1.4em;">@totalScore</td>
                                    </tr>
                                }
                            }
                        </table>
                    </div>
                }
                

                //laver dynamisk et "table" til hvert hold der indeholde holdets deltagere
                <div class="col-6 col-md-3 col-lg-2">
                    <br />
                    <div>
                        <table style=" height: auto; width: 100%;">
                            @{
                                if (Model.SelectedEvent != -1)
                                {
                                    <tr>
                                        <td class="col" style="border: solid black; border-width: 1px 1px 1px 1px; text-align:center; font-weight: bold; font-size: 1.4em;">Point</td>
                                    </tr>
                                }
                            }
                            @{
                                //opretter deltagerne af hver hold
                                foreach (var _hold in @Model.HoldList)
                                {
                                    int? point = 0;
                                    foreach (var _aktivitet in _hold.HoldAktiviteter)
                                    {
                                        if (_aktivitet.Point != null)
                                        {
                                            point += _aktivitet.Point;
                                        }
                                    }

                                    <tr>
                                        <td class="col" style="border: solid black; border-width: 1px 1px 1px 1px; text-align:center; font-size: 1.4em;">@point</td>
                                    </tr>
                                    
                                }
                            }
                        </table>
                    </div>
                </div>
            }
        </div>
        <br/>
        @{
            if (Model.SelectedEvent != -1)
            {
                <input type="button" value="Vis" onclick="elementChanged('CmdVis')" />
            }
        }
    </div>

        @section Scripts
{
            <script>
                function elementChanged(elementet) {
                    let url = new URL(location.href);

                    //lav nedenstående 3 linjer for hver "select" liste
                    let EventList = document.getElementById('EventList');
                    let EventListValgt = EventList.options[EventList.selectedIndex].value;
                    url.searchParams.set("EventList", EventListValgt);

                    url.searchParams.set("ValgtGuiElemement", elementet);
                    location.href = url;
                }
            </script>
        }

        @section NavMenu
        {
            @{
                if (Model.CurrentLogin != null && Model.CurrentLogin.Id != 0)
                {
                    <partial name="_TopNavMenuPartialView" />
                }
            }
        }

    }
}
